// Generated by gencpp from file cs_merge_msgs/getTransformResponse.msg
// DO NOT EDIT!


#ifndef CS_MERGE_MSGS_MESSAGE_GETTRANSFORMRESPONSE_H
#define CS_MERGE_MSGS_MESSAGE_GETTRANSFORMRESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <cs_merge_msgs/transform.h>

namespace cs_merge_msgs
{
template <class ContainerAllocator>
struct getTransformResponse_
{
  typedef getTransformResponse_<ContainerAllocator> Type;

  getTransformResponse_()
    : result()  {
    }
  getTransformResponse_(const ContainerAllocator& _alloc)
    : result(_alloc)  {
    }



   typedef  ::cs_merge_msgs::transform_<ContainerAllocator>  _result_type;
  _result_type result;




  typedef boost::shared_ptr< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> const> ConstPtr;

}; // struct getTransformResponse_

typedef ::cs_merge_msgs::getTransformResponse_<std::allocator<void> > getTransformResponse;

typedef boost::shared_ptr< ::cs_merge_msgs::getTransformResponse > getTransformResponsePtr;
typedef boost::shared_ptr< ::cs_merge_msgs::getTransformResponse const> getTransformResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace cs_merge_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/indigo/share/nav_msgs/cmake/../msg'], 'cs_merge_msgs': ['/home/christian/catkin_ws/src/cs_merge/cs_merge_msgs/msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "2b6ef843ea74b64aaef6e5bec56fc360";
  }

  static const char* value(const ::cs_merge_msgs::getTransformResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x2b6ef843ea74b64aULL;
  static const uint64_t static_value2 = 0xaef6e5bec56fc360ULL;
};

template<class ContainerAllocator>
struct DataType< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "cs_merge_msgs/getTransformResponse";
  }

  static const char* value(const ::cs_merge_msgs::getTransformResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "\n\
cs_merge_msgs/transform result\n\
\n\
\n\
================================================================================\n\
MSG: cs_merge_msgs/transform\n\
time stamp\n\
float64 rotation\n\
float64 dx\n\
float64 dy\n\
";
  }

  static const char* value(const ::cs_merge_msgs::getTransformResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.result);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct getTransformResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::cs_merge_msgs::getTransformResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::cs_merge_msgs::getTransformResponse_<ContainerAllocator>& v)
  {
    s << indent << "result: ";
    s << std::endl;
    Printer< ::cs_merge_msgs::transform_<ContainerAllocator> >::stream(s, indent + "  ", v.result);
  }
};

} // namespace message_operations
} // namespace ros

#endif // CS_MERGE_MSGS_MESSAGE_GETTRANSFORMRESPONSE_H
